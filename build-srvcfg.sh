#!/bin/bash

echo "Enter password for MySQL:"
read DBPSWD
CFGTAG="####>>>> GENERATED BY: BeyondEarthRP FiveM Config & DB Manager"


declare -a configs
OUT_CFG="serverCfg_top"
CONFIG=0

if [ -d "./configs" ]; then
    rm -rf ./configs
fi
if [ -f "./server.cfg" ]; then
    rm -f ./server.cfg
fi
if [ -f "./serverCfg_top" ]; then
    rm -f ./serverCfg_top
fi

mkdir configs
touch server.cfg

if [ -z $RESOURCES ]; then
    RESOURCES="."
fi

while read -r line <&3; do
    if [ ! -z "$line" ]; then
        CONF_TYPE=$(echo $line | cut -f1 -d:)
        DATA=$(echo $line | rev | cut -f1 -d: | rev)

        if [ $CONF_TYPE == "CONFIG" ]; then
            echo "$DATA >> $OUT_CFG"
            echo $DATA >> $OUT_CFG
            if [ "$OUT_CFG" != "serverCfg_top" ]; then
                CONFIG=1
            fi
        elif [ $CONF_TYPE == "MYSQL" ]; then
            FILE=${DATA/<RESOURCES>/$RESOURCES}

            #nano $FILE   #<- to edit the files first
            echo $FILE
            mysql -u root -p$DBPSWD essentialmode < $FILE
        elif [ $CONF_TYPE == "HEADER" ]; then
            # EXAMPLE:
            # HEADER:HEADER INFORMATION%FILE

            if [ $CONFIG != 0 ]; then
                # CLOSING OUT PREVIOUS CONFIG
                echo "" >> $OUT_CFG
                echo $CFGTAG >> $OUT_CFG
            else
                if [ "$OUT_CFG" != "serverCfg_top" ]; then
                    rm $OUT_CFG
                fi
            fi

            # STARTING A NEW CONFIG
            HEADER_INFO=$(echo $DATA | cut -f1 -d%)
            HEADER_FILE=$(echo $DATA | rev | cut -f1 -d% | rev)
            OUT_CFG="configs/$HEADER_FILE.cfg"
            CONFIG=0

            touch $OUT_CFG
            configs+=("$OUT_CFG")

            echo "#######################################" > $OUT_CFG
            echo "# $HEADER_INFO" >> $OUT_CFG
            echo "#######################################" >> $OUT_CFG
        elif [ $CONF_TYPE == "######" ]; then #SUBHEADER
            # EXAMPLE:
            # SUBHEADER:PUT YOUR HEADER HERE

            echo "" >> $OUT_CFG
            echo "#||||||||||||||||||||||||||||||||||||||" >> $OUT_CFG
            echo "#|> $DATA" >> $OUT_CFG
            echo "#||||||||||||||||||||||||||||||||||||||" >> $OUT_CFG
        fi
    else
        echo ""
    fi
    echo ""
done 3< <(cat serverCfg_data)
if [ $CONFIG != 0 ]; then
    # CLOSING OUT PREVIOUS CONFIG
    echo "" >> $OUT_CFG
    echo $CFGTAG >> $OUT_CFG
else
    rm $OUT_CFG
fi

timestamp=$(date +%s)
echo "#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#" > server.cfg
echo "#> BEYOND EARTH ROLEPLAY" >> server.cfg
echo "#> $timestamp" >> server.cfg
echo "#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#" >> server.cfg
echo "" >> server.cfg
cat serverCfg_net >> server.cfg
if [ -f ./serverCfg_top ]; then
    echo "writing the top of the config:"
    echo "    cat serverCfg_top >> server.cfg "
    cat serverCfg_top >> server.cfg
    echo "removing artifact"
    echo "    rm serverCfg_top"
    rm serverCfg_top
    echo ""

fi
echo "" >> server.cfg
echo "#######################################" >> server.cfg
echo "# EXTERNAL CONFIGURATION FILES" >> server.cfg
echo "#######################################" >> server.cfg
for serverCfg in "${configs[@]}"
do
    echo "writing config line:"
    echo "    exec $serverCfg"
    echo "exec $serverCfg" >> server.cfg
    echo ""
done
echo "done with nested configs."
echo ""
echo "writing footer config..."
cat serverCfg_footer >> server.cfg
echo ""
echo "Finished."
